<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 객체를 자동으로 생성하려면,
     namespace의 값이 인터페이스 이름과 같아야 한다. -->
<mapper namespace="java100.app.dao.BusinessReviewDao">

    <resultMap type="businessReview" id="businessReviewMap">
        <id column="rv_no" property="reviewNo"/>
        <result column="title" property="title"/>
        <result column="conts" property="content"/>
        <result column="date" property="createDate"/>
        <result column="point" property="StarPoint"/>
        <result column="vwcnt" property="viewCount"/>
        <result column="bus_no" property="b_number"/>
        
        <association property="registrant" javaType="member">
            <id column="m_no" property="memberNo"/>
            <result column="m_name" property="memberName"/>
        </association>
        
        <!-- 첨부파일 정보를 담을 수 있도록 설정한다. -->
        <collection property="files"  ofType="businessReviewUploadFile">
            <id     column="mda_no"       property="no"/>
            <result column="file"   property="filename"/>
            <result column="rv_no"   property="reviewNo"/>
        </collection> 
        
    </resultMap>

    <select id="findAll" resultMap="businessReviewMap" parameterType="map">
         select 
	         r.rv_no,
	         r.title,
	         r.conts,
	         r.date,
	         r.point, 
	         r.vwcnt,
	         b.bus_no,
	         r.bus_no,
	         m.file,
	         m.rv_no
        from bus_rv as r
            left join bus as b on r.bus_no=b.bus_no
            left join bus_rv_mda as m on r.rv_no=m.rv_no
        where r.bus_no=b.bus_no

        <if test="words != null">
	        <where>
	            <foreach collection="words" item="word">
	                or title like '%${word}%'
	            </foreach>
	        </where>
        </if>
        
        <!-- 정렬 조건에 따라 SQL문을 변경한다.-->
       <!--  order by 
        <choose>
            <when test="orderColumn == 'name' and align == 'desc'">
                name desc
            </when>
            <when test="orderColumn == 'name' and align == 'asc'">
                name asc
            </when>
            <when test="orderColumn == 'nic_name' and align == 'desc'">
                nic_name desc
            </when>
            <when test="orderColumn == 'nic_name' and align == 'asc'">
                nic_name asc
            </when>
            <when test="orderColumn == 'email' and align == 'desc'">
                email desc
            </when>
            <when test="orderColumn == 'email' and align == 'asc'">
                email asc
            </when>
            <when test="orderColumn == 'cre_date' and align == 'desc'">
                cre_date desc
            </when>
            <when test="orderColumn == 'cre_date' and align == 'asc'">
                cre_date asc
            </when>
            <otherwise>
                m_no desc
            </otherwise>
        </choose> -->
       
        limit #{startIndex}, #{size}
    </select> 
    
    <select id="countAll" resultType="int">
        select count(*) from bus_rv
    </select>
    <insert id="insert" parameterType="businessReview"
        useGeneratedKeys="true" keyColumn="rv_no" keyProperty="reviewNo">
        insert into bus_rv(m_no,bus_no,title,conts,date)
        values(#{registrant.memberNo},#{b_number},#{title},#{content},now())
    </insert>
  
  
    <select id="findByNo" resultMap="businessReviewMap" parameterType="int">
       select 
             r.rv_no,
             r.title,
             r.conts,
             r.date,
             r.point, 
             r.vwcnt,
             b.bus_no
        from bus_rv as r
            left join bus as b on r.bus_no=b.bus_no
            left join memb as m on r.m_no=m.m_no
        where r.rv_no=#{value}
    </select>
        
    <select id="findByBusinessNo" resultMap="businessReviewMap" parameterType="int">
        select bus_no from bus where m_no=#{member.memberNo}
    </select>
    
    <update id="update" parameterType="business">
        update bus_rv set
            title=#{title}, 
            conts=#{content}
         where rv_no=#{reviewNo}
    </update>

    <delete id="delete" parameterType="int">
        delete from bus_rv
        where rv_no=#{value}
    </delete> 
</mapper>  









